# Environment configurations for different stages

default: &default
  LOG_LEVEL: INFO
  POWERTOOLS_SERVICE_NAME: hospital-data-integrator
  POWERTOOLS_TRACE_DISABLED: true

development:
  <<: *default
  STAGE: dev
  AWS_REGION: eu-west-1
  DYNAMODB_ENDPOINT: http://localhost:8000
  API_PORT: 4000
  SERVERLESS_PORT: 3000
  DYNAMODB_PREFIX: dev-hospital-data-integrator
  CORS_ORIGIN: http://localhost:3000
  WEBSOCKET_API_URL: ws://localhost:3001

staging:
  <<: *default
  STAGE: staging
  AWS_REGION: eu-west-1
  DYNAMODB_PREFIX: staging-hospital-data-integrator
  CORS_ORIGIN: https://staging.hospital-monitor.com
  LOG_LEVEL: DEBUG

production:
  <<: *default
  STAGE: prod
  AWS_REGION: eu-west-1
  DYNAMODB_PREFIX: prod-hospital-data-integrator
  CORS_ORIGIN: https://hospital-monitor.com
  LOG_LEVEL: INFO
  POWERTOOLS_TRACE_DISABLED: false

test:
  <<: *default
  STAGE: test
  AWS_REGION: local
  DYNAMODB_ENDPOINT: http://localhost:8000
  DYNAMODB_PREFIX: test-hospital-data-integrator
  CORS_ORIGIN: http://localhost:3000
  LOG_LEVEL: DEBUG

# Table configuration
tables:
  patients:
    name: ${DYNAMODB_PREFIX}-patients
    indexes: []

  admissions:
    name: ${DYNAMODB_PREFIX}-admissions
    indexes:
      - name: MonitoringIndex
        hash_key: status
        range_key: hoursSinceTest

  tests:
    name: ${DYNAMODB_PREFIX}-tests
    indexes:
      - name: PatientTestIndex
        hash_key: patientId
        range_key: testDate

# Monitoring configuration
monitoring:
  test_alert_threshold: 48  # hours
  warning_threshold: 36     # hours
  check_interval: 60        # seconds
  batch_size: 100          # records per batch

# API configuration
api:
  rate_limit: 1000         # requests per minute
  timeout: 30              # seconds
  max_payload_size: 6      # MB

# WebSocket configuration
websocket:
  connection_ttl: 7200     # seconds
  message_retention: 24    # hours

# Security configuration
security:
  cors_max_age: 7200      # seconds
  api_key_rotation: 90    # days